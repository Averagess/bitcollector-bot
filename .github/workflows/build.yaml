name: Build and lint

on:
  pull_request:
    branches: [master]  
  push:
    branches: [master]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}


    - name: Install dependencies
      run: yarn

    - name: Lint
      run: yarn lint
    
    - name: Build project
      run: yarn build
  publish-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read
    needs: build-and-lint
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    
    - name: Build image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME

    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
    
    - name: Push image
      run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
